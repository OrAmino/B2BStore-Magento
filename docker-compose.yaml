version: '2.1'
services:
  db:
    hostname: db.magento2.docker
    image: 'mariadb:10.4'
    environment:
      - MYSQL_ROOT_PASSWORD=magento2
      - MYSQL_DATABASE=magento2
      - MYSQL_USER=magento2
      - MYSQL_PASSWORD=magento2
    volumes:
      - './mymagento-magento-sync:/app:delegated'
      - 'mymagento-magento-db:/var/lib/mysql'
    healthcheck:
      test: 'mysqladmin ping -h localhost'
      interval: 10s
      timeout: 10s
      retries: 3
  redis:
    hostname: redis.magento2.docker
    image: 'redis:6.2'
    volumes:
      - './mymagento-magento-sync:/app:delegated'
    healthcheck:
      test: 'redis-cli ping || exit 1'
      interval: 30s
      timeout: 30s
      retries: 3
  
  opensearch-node1:
    image: opensearchproject/opensearch:1.2.4
    container_name: opensearch-node1
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node1
      - discovery.seed_hosts=opensearch-node1,opensearch-node2
      - cluster.initial_master_nodes=opensearch-node1,opensearch-node2
      - plugins.security.ssl.http.enabled=false
      - bootstrap.memory_lock=true # along with the memlock settings below, disables swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536 # maximum number of open files for the OpenSearch user, set to at least 65536 on modern systems
        hard: 65536
  opensearch-node2:
    image: opensearchproject/opensearch:1.2.4
    container_name: opensearch-node2
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node2
      - discovery.seed_hosts=opensearch-node1,opensearch-node2
      - cluster.initial_master_nodes=opensearch-node1,opensearch-node2
      - plugins.security.ssl.http.enabled=false
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
  fpm:
    hostname: fpm.magento2.docker
    build: '.docker/PHP/'
    extends: generic
    environment:
      - XDEBUG_CONFIG=client_host=host.docker.internal mode=debug start_with_request=yes
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - './mymagento-magento-sync:/app:delegated'
      - './docker-php-ext-xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini'
    depends_on:
      db:
        condition: service_healthy
  web:
    hostname: web.magento2.docker
    image: 'nginx:1.18'
    extends: generic
    volumes:
      - './mymagento-magento-sync:/app:delegated'
      - './config/web/default.conf:/etc/nginx/conf.d/default.conf'
    environment:
      - VIRTUAL_HOST=magento2.docker
      - VIRTUAL_PORT=80
      - HTTPS_METHOD=noredirect
      - WITH_XDEBUG=1
      - XDEBUG_HOST=fpm
      - MAGENTO_RUN_MODE=developer
    depends_on:
      fpm:
        condition: service_started
  varnish:
    hostname: varnish.magento2.docker
    image: 'varnish:7.1'
    volumes:
      - './config/varnish/default.vcl:/etc/varnish/default.vcl'
    depends_on:
      web:
        condition: service_started
  tls:
    hostname: tls.magento2.docker
    image: 'magento/magento-cloud-docker-tls:latest-1.1'
    ports:
      - '443:443'
    environment:
      HTTPS_UPSTREAM_SERVER_ADDRESS: varnish
    depends_on:
      varnish:
        condition: service_started
  generic:
    hostname: generic.magento2.docker
    image: 'alpine:latest'
    env_file: ./.docker/config.env
    environment:
      - MAGENTO_RUN_MODE=developer
      - 'PHP_EXTENSIONS=bcmath bz2 calendar exif gd gettext intl mysqli pcntl pdo_mysql soap sockets sysvmsg sysvsem sysvshm opcache zip sodium redis xsl blackfire'
volumes:
  mymagento-magento-sync:
    driver_opts:
      type: none
      device: './mymagento-magento-sync'
      o: bind
  mymagento-magento-db:
